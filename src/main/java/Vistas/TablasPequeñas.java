/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
SELECT COUNT(empleados.idArea),
area.nombre 
from empleados 
inner join area 
on area.id = empleados.idArea
GROUP by (area.nombre);
 */
package Vistas;

import Models.Utelerias;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Jhonatan
 */
public class TablasPequeñas extends javax.swing.JPanel {

    //variables para los graficos
    JFreeChart grafico;
    DefaultCategoryDataset datos = new DefaultCategoryDataset();

    Utelerias utelerias = new Utelerias();
    String[] cabezera = {"Nº Empleadps", "Cantidad"};
    DefaultTableModel modelo = new DefaultTableModel(cabezera, 0);

    public TablasPequeñas() {
        initComponents();
        utelerias.cargarTable(modelo, tblDatos, 2);
        graficarDatos();
    }

    private void graficarDatos() {
        try {
            //recorremos cada fila
            for (int i = 0; i < tblDatos.getRowCount(); i++) {
                datos.addValue(Integer.parseInt(tblDatos.getValueAt(i, 0).toString()), tblDatos.getValueAt(i, 1).toString(), tblDatos.getValueAt(i, 1).toString());
            }

            //mostramos los graficos
            grafico = ChartFactory.createBarChart("Grafico de cantidad de empleados por Área",
                    "Área", "Cantidad", datos, PlotOrientation.VERTICAL,
                    true, true,
                    false);
            ChartPanel panel = new ChartPanel(grafico);
            this.add(panel);
            panel.setBounds(300, 40, 450, 250);

        } catch (NumberFormatException e) {
            System.out.println("""
                               Error al graficar :
                                """ + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº de empleados", "Área"
            }
        ));
        jScrollPane1.setViewportView(tblDatos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(636, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(316, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables
}
